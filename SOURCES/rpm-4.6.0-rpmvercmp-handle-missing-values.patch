diff -p -up rpm-4.6.0/lib/rpmds.c.1011 rpm-4.6.0/lib/rpmds.c
--- rpm-4.6.0/lib/rpmds.c.1011	2009-11-20 17:39:26.438934630 -0500
+++ rpm-4.6.0/lib/rpmds.c	2009-11-21 11:13:55.305923971 -0500
@@ -747,12 +747,12 @@ void parseEVR(char * evr,
 		const char ** vp,
 		const char ** rp)
 {
-    const char *epoch;
+    const char *epoch = "0";
     const char *version;		/* assume only version is present */
-    const char *release;
-    char *s, *se;
+    const char *release = "";
+    char *s = evr;
+    char *se;
 
-    s = evr;
     while (*s && risdigit(*s)) s++;	/* s points to epoch terminator */
     se = strrchr(s, '-');		/* se points to version terminator */
 
@@ -760,16 +760,12 @@ void parseEVR(char * evr,
 	epoch = evr;
 	*s++ = '\0';
 	version = s;
-	if (*epoch == '\0') epoch = "0";
     } else {
-	epoch = NULL;	/* XXX disable epoch compare if missing */
 	version = evr;
     }
     if (se) {
 	*se++ = '\0';
 	release = se;
-    } else {
-	release = NULL;
     }
 
     if (ep) *ep = epoch;
@@ -816,24 +812,18 @@ int rpmdsCompare(const rpmds A, const rp
     bEVR = xstrdup(B->EVR[B->i]);
     parseEVR(bEVR, &bE, &bV, &bR);
 
-    /* Compare {A,B} [epoch:]version[-release] */
-    sense = 0;
-    if (aE && *aE && bE && *bE)
-	sense = rpmvercmp(aE, bE);
-    else if (aE && *aE && atol(aE) > 0) {
-	if (!B->nopromote) {
-	    int lvl = (_rpmds_unspecified_epoch_noise  ? RPMLOG_WARNING : RPMLOG_DEBUG);
-	    rpmlog(lvl, _("The \"B\" dependency needs an epoch (assuming same epoch as \"A\")\n\tA = \"%s\"\tB = \"%s\"\n"),
-		aDepend, bDepend);
-	    sense = 0;
-	} else
-	    sense = 1;
-    } else if (bE && *bE && atol(bE) > 0)
-	sense = -1;
+    if((B->Flags[B->i] & (~RPMSENSE_GREATER & RPMSENSE_EQUAL))
+	&& *bR == '\0')
+    {
+	aR = NULL;
+	bR = NULL;
+    }
 
+    /* Compare {A,B} [epoch:]version[-release] */
+    sense = rpmvercmp(aE, bE);
     if (sense == 0) {
 	sense = rpmvercmp(aV, bV);
-	if (sense == 0 && aR && *aR && bR && *bR)
+	if (sense == 0 && aR && bR)
 	    sense = rpmvercmp(aR, bR);
     }
     aEVR = _free(aEVR);
