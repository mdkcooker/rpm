From f57cd4dcf3fe2ab90a4a63423babca06b4cb8ef2 Mon Sep 17 00:00:00 2001
From: unknown author <cooker@mandrivalinux.org>
Date: Mon, 5 Jan 2009 13:29:57 +0000
Subject: [PATCH 29/36] python writeHdlist

---
 python/header-py.c |   74 ++++++++++++++++++++++++++++++++++++++++++++++++++++
 python/header-py.h |    1 +
 python/rpmmodule.c |    2 +
 3 files changed, 77 insertions(+), 0 deletions(-)

diff --git a/python/header-py.c b/python/header-py.c
index 539db0d..d3ae786 100644
--- a/python/header-py.c
+++ b/python/header-py.c
@@ -801,6 +801,80 @@ rpmMergeHeadersFromFD(PyObject * self, PyObject * args, PyObject * kwds)
     Py_RETURN_NONE;
 }
 
+int WriteHeaders(PyObject *hdlist,char *filename)
+{
+  hdrObject *hdr;
+  FD_t  outfdt=0;
+  int   count;
+  
+  outfdt = Fopen(filename, "w.fdio");
+  if ((!outfdt)||(Fileno(outfdt)<0)) return(-1);
+
+  for(count=0;count<PyList_Size(hdlist);count++){
+    hdr = (hdrObject *)PyList_GetItem(hdlist, count);
+    headerWrite(outfdt,hdr->h,HEADER_MAGIC_YES);
+  }
+  Fclose(outfdt);
+  return(0);
+}
+
+PyObject * rpmHeaderToFile(PyObject * self, PyObject * args)
+{
+  PyObject  *hdlist;
+  char  *filename;
+  int ret;
+
+  if (!PyArg_ParseTuple(args,"Os",&hdlist,&filename)) return NULL;
+  ret = WriteHeaders(hdlist,filename);
+  return(Py_BuildValue("i",ret));
+}
+
+/**
+ */
+PyObject *
+rpmSingleHeaderFromFD(PyObject * self, PyObject * args, PyObject * kwds)
+{
+    FD_t fd;
+    int fileno;
+    off_t offset;
+    PyObject * tuple;
+    Header h;
+    char * kwlist[] = {"fd", NULL};
+
+    if (!PyArg_ParseTupleAndKeywords(args, kwds, "i", kwlist, &fileno))
+	return NULL;
+
+    offset = lseek(fileno, 0, SEEK_CUR);
+
+    fd = fdDup(fileno);
+
+    if (!fd) {
+	PyErr_SetFromErrno(pyrpmError);
+	return NULL;
+    }
+
+    Py_BEGIN_ALLOW_THREADS
+    h = headerRead(fd, HEADER_MAGIC_YES);
+    Py_END_ALLOW_THREADS
+
+    Fclose(fd);
+
+    tuple = PyTuple_New(2);
+
+    if (h && tuple) {
+	PyTuple_SET_ITEM(tuple, 0, (PyObject *) hdr_Wrap(h));
+	PyTuple_SET_ITEM(tuple, 1, PyLong_FromLong(offset));
+	h = headerFree(h);
+    } else {
+	Py_INCREF(Py_None);
+	Py_INCREF(Py_None);
+	PyTuple_SET_ITEM(tuple, 0, Py_None);
+	PyTuple_SET_ITEM(tuple, 1, Py_None);
+    }
+
+    return tuple;
+}
+
 PyObject * versionCompare (PyObject * self, PyObject * args, PyObject * kwds)
 {
     hdrObject * h1, * h2;
diff --git a/python/header-py.h b/python/header-py.h
index 28378ac..42758b5 100644
--- a/python/header-py.h
+++ b/python/header-py.h
@@ -23,4 +23,5 @@ int tagNumFromPyObject (PyObject *item, rpmTag *tagp);
 PyObject * labelCompare (PyObject * self, PyObject * args);
 PyObject * versionCompare (PyObject * self, PyObject * args, PyObject * kwds);
 PyObject * rpmMergeHeadersFromFD(PyObject * self, PyObject * args, PyObject * kwds);
+PyObject * rpmHeaderToFile(PyObject * self, PyObject * args);
 #endif
diff --git a/python/rpmmodule.c b/python/rpmmodule.c
index 9abdd00..0ccbaa1 100644
--- a/python/rpmmodule.c
+++ b/python/rpmmodule.c
@@ -122,6 +122,8 @@ static PyMethodDef rpmModuleMethods[] = {
 	NULL },
     { "expandMacro", (PyCFunction) rpmmacro_ExpandMacro, METH_VARARGS|METH_KEYWORDS,
 	NULL },
+    { "writeHeaderListToFile", (PyCFunction) rpmHeaderToFile, METH_VARARGS,
+        NULL },
 
     { "archscore", (PyCFunction) archScore, METH_O,
 	NULL },
-- 
1.6.4.4

